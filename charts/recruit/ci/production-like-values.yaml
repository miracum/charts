podAnnotations:
  linkerd.io/inject: "enabled"

notify:
  replicaCount: 2
  podDisruptionBudget:
    enabled: true
  ha:
    enabled: true
  topologySpreadConstraints:
    - maxSkew: 1
      topologyKey: topology.kubernetes.io/zone
      whenUnsatisfiable: ScheduleAnyway
      labelSelector:
        matchLabels:
          app.kubernetes.io/name: recruit
          app.kubernetes.io/instance: recruit
          app.kubernetes.io/component: notify
  rules:
    schedules:
      everyMorning: "0 0 8 1/1 * ? *"
    trials:
      - acronym: "SAMPLE"
        accessibleBy:
          users:
            - "user1"
            - "user.two@example.com"
        subscriptions:
          - email: "everyMorning-sample@example.com"
            notify: "everyMorning"
  metrics:
    serviceMonitor:
      # should be `true`, but requires the kube-prometheus-stack to be installed.
      enabled: false
      additionalLabels:
        release: kube-prom-stack

list:
  podDisruptionBudget:
    enabled: true
  replicaCount: 2
  topologySpreadConstraints:
    - maxSkew: 1
      topologyKey: topology.kubernetes.io/zone
      whenUnsatisfiable: ScheduleAnyway
      labelSelector:
        matchLabels:
          app.kubernetes.io/name: recruit
          app.kubernetes.io/instance: recruit
          app.kubernetes.io/component: list
  ingress:
    enabled: true
    hosts:
      - host: recruit-list.127.0.0.1.nip.io
        paths:
          - "/"
  metrics:
    serviceMonitor:
      enabled: false
      additionalLabels:
        release: kube-prom-stack
query:
  metrics:
    serviceMonitor:
      enabled: false
      additionalLabels:
        release: kube-prom-stack

postgresql:
  enabled: true
  auth:
    postgresPassword: recruit-notify-ha
  primary:
    service:
      annotations:
        config.linkerd.io/opaque-ports: "5432"

ohdsi:
  ingress:
    enabled: true
    hosts:
      - host: recruit-ohdsi.127.0.0.1.nip.io
  postgresql:
    auth:
      postgresPassword: ohdsi
    primary:
      service:
        annotations:
          config.linkerd.io/opaque-ports: "5432"
      resources:
        limits:
          memory: 2Gi
          cpu: 1000m
  atlas:
    replicaCount: 2
    topologySpreadConstraints:
      - maxSkew: 1
        topologyKey: topology.kubernetes.io/zone
        whenUnsatisfiable: ScheduleAnyway
        labelSelector:
          matchLabels:
            app.kubernetes.io/name: ohdsi
            app.kubernetes.io/instance: recruit
            app.kubernetes.io/component: atlas
    podAnnotations:
      linkerd.io/inject: "enabled"

  webApi:
    podAnnotations:
      linkerd.io/inject: "enabled"

fhirserver:
  ingress:
    enabled: true
    hosts:
      - host: recruit-fhir-server.127.0.0.1.nip.io
        pathType: ImplementationSpecific
        paths: ["/"]
  replicaCount: 2
  topologySpreadConstraints:
    - maxSkew: 1
      topologyKey: topology.kubernetes.io/zone
      whenUnsatisfiable: ScheduleAnyway
      labelSelector:
        matchLabels:
          app.kubernetes.io/name: fhirserver
          app.kubernetes.io/instance: recruit
  postgresql:
    auth:
      postgresPassword: fhir
    primary:
      service:
        annotations:
          config.linkerd.io/opaque-ports: "5432"
  podAnnotations:
    linkerd.io/inject: "enabled"

mailhog:
  podAnnotations:
    linkerd.io/inject: "enabled"
