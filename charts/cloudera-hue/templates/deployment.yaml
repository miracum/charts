apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "cloudera-hue.fullname" . }}
  labels:
    {{- include "cloudera-hue.labels" . | nindent 4 }}
  annotations:
    polaris.fairwinds.com/automountServiceAccountToken-exempt: "true"
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "cloudera-hue.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/hue-config-configmap.yaml") . | sha256sum | quote }}
        {{- with .Values.podAnnotations }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        {{- include "cloudera-hue.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "cloudera-hue.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
        - name: wait-for-db
          image: {{ include "cloudera-hue.waitForDatabaseInitContainerImage" . }}
          imagePullPolicy: {{ .Values.waitForDatabaseInitContainer.image.pullPolicy }}
          {{- with .Values.restrictedContainerSecurityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          env:
            - name: PGHOST
              value: {{ include "cloudera-hue.database.host" $ }}
            - name: PGPORT
              value: {{ include "cloudera-hue.database.port" $ | quote }}
            - name: PGUSER
              value: {{ include "cloudera-hue.database.user" $ }}
          command: ["/bin/sh", "-c"]
          args:
            - |
              until pg_isready; do
                echo "Waiting for DB ${PGUSER}@${PGHOST}:${PGPORT} to be up";
                sleep 10;
              done;
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.registry }}/{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          env:
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "cloudera-hue.database.db-secret-name" . }}
                  key: {{ include "cloudera-hue.database.db-secret-key" . }}
            - name: DJANGO_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ include "cloudera-hue.fullname" . }}-django-session-secret
                  key: django-session-secret
            - name: PGUSER
              value: {{ include "cloudera-hue.database.user" $ }}
          {{- with .Values.livenessProbe }}
          livenessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.readinessProbe }}
          readinessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: tmp-volume
              mountPath: /tmp
            - name: config-volume
              mountPath: /usr/share/hue/desktop/conf/z-hue.ini
              readOnly: true
              subPath: z-hue.ini
            {{- if .Values.extraHueConfig }}
            - name: config-volume
              mountPath: /usr/share/hue/desktop/conf/zz-hue.ini
              readOnly: true
              subPath: zz-hue.ini
            {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: tmp-volume
          emptyDir: {}
        - name: config-volume
          configMap:
            name: {{ include "cloudera-hue.fullname" . }}-config
