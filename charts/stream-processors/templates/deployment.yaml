{{- range $name, $processor := .Values.processors }}
{{- $spec := mustMergeOverwrite (deepCopy $.Values.default) $processor -}}
{{- with $spec }}
---
apiVersion: apps/v1
kind: {{ ternary "StatefulSet" "Deployment" .persistence.enabled }}
metadata:
  name: {{ include "stream-processors.fullname" $ }}-{{ $name }}
  labels:
    {{- include "stream-processors.labels" $ | nindent 4 }}
    app.kubernetes.io/version: {{ include "stream-processors.version-label-value" . }}
    app.kubernetes.io/name: {{ $name }}
    app.kubernetes.io/instance: {{ $.Release.Name }}-{{ $name }}
  {{- with $.Values.commonAnnotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  replicas: {{ default $.Values.defaultReplicaCount .replicaCount }}
  revisionHistoryLimit: {{ default $.Values.defaultRevisionHistoryLimit .revisionHistoryLimit }}
  {{- if .persistence.enabled }}
  serviceName: {{ include "stream-processors.fullname" $ }}-{{ $name }}
  {{- end }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ $name }}
      app.kubernetes.io/instance: {{ $.Release.Name }}-{{ $name }}
  {{- if not .persistence.enabled }}
  strategy:
    type: {{ default "RollingUpdate" .deploymentStrategyType }}
  {{- end }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ $name }}
        app.kubernetes.io/instance: {{ $.Release.Name }}-{{ $name }}
    spec:
      {{- with $.Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- .podSecurityContext | default $.Values.podSecurityContext | toYaml | nindent 8 }}
      {{- with .initContainers }}
      initContainers:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ $name }}
          securityContext:
            {{- .container.securityContext | default $.Values.securityContext | toYaml | nindent 12 }}
          image: "{{ .container.image.registry }}/{{ .container.image.repository }}:{{ .container.image.tag }}"
          imagePullPolicy: {{ .container.image.pullPolicy }}
          {{- with .container }}
          {{- with .livenessProbe }}
          livenessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .readinessProbe }}
          readinessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- end }}
          {{- with .metrics }}
          {{- if .enabled }}
          ports:
            - containerPort: {{ .port | default 8080 }}
              name: "metrics"
          {{- end }}
          {{- end }}
          env:
            - name: GROUP_ID
              value: {{ $name }}
            - name: KAFKA_GROUP_ID
              value: {{ $name }}
            - name: SECURITY_PROTOCOL
              value: {{ $.Values.securityProtocol }}
            - name: KAFKA_SECURITY_PROTOCOL
              value: {{ $.Values.securityProtocol }}
            - name: BOOTSTRAP_SERVERS
              value: {{ $.Values.strimziClusterName }}-kafka-bootstrap:{{ (eq $.Values.securityProtocol "SSL") | ternary "9093" "9092" }}
            - name: KAFKA_BOOTSTRAP_SERVERS
              value: {{ $.Values.strimziClusterName }}-kafka-bootstrap:{{ (eq $.Values.securityProtocol "SSL") | ternary "9093" "9092" }}
            - name: SSL_KEY_STORE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "stream-processors.fullname" $ }}-{{ $name }}-user
                  key: user.password
            - name: KAFKA_SSL_KEY_STORE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "stream-processors.fullname" $ }}-{{ $name }}-user
                  key: user.password
            - name: SSL_TRUST_STORE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ $.Values.strimziClusterName }}-cluster-ca-cert
                  key: ca.password
            - name: KAFKA_SSL_TRUST_STORE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ $.Values.strimziClusterName }}-cluster-ca-cert
                  key: ca.password
            {{- with .kafka }}
            {{- if .topics }}
            - name: TOPICS
              value: {{ include "stream-processors.utils.joinListWithComma" .topics }}
            - name: TOPIC
              value: {{ include "stream-processors.utils.joinListWithComma" .topics }}
            - name: KAFKA_TOPICS
              value: {{ include "stream-processors.utils.joinListWithComma" .topics }}
            - name: KAFKA_TOPIC
              value: {{ include "stream-processors.utils.joinListWithComma" .topics }}
            {{- end }}
            {{- if .processors }}
            - name: SPRING_CLOUD_FUNCTION_DEFINITION
              value: {{ include "stream-processors.utils.joinListWithSemicolon" .processors }}
            - name: ACTIVE_PROCESSORS
              value: {{ include "stream-processors.utils.joinListWithSemicolon" .processors }}
            {{- end }}
            {{- end }}
            {{- if .persistence.enabled }}
            - name: SPRING_KAFKA_STREAMS_STATE_DIR
              value: {{ .persistence.mountPath }}
            {{- end }}
            {{- if .container.env -}}
            {{- toYaml .container.env | default "" | nindent 12 }}
            {{- end }}
            {{- with .container.envDict }}
            {{- range $key, $value := . }}
            - name: {{ $key }}
              value: {{ $value | quote }}
            {{- end }}
            {{- end }}
          resources:
            {{- toYaml .container.resources | nindent 12 }}
          volumeMounts:
            - name: kafka-certs
              mountPath: "/opt/kafka-certs"
              readOnly: true
            - name: tmp
              mountPath: "/tmp"
          {{- if .persistence.enabled }}
            - name: {{ .persistence.volumeName }}
              mountPath: {{ .persistence.mountPath }}
          {{- end }}
          {{- if .container.extraVolumeMounts }}
            {{- toYaml .container.extraVolumeMounts | nindent 12 }}
          {{- end }}
        {{- if .extraContainers }}
        {{- toYaml .extraContainers | nindent 8 }}
        {{- end }}
      nodeSelector:
        {{- .nodeSelector | default $.Values.defaultNodeSelector | toYaml | nindent 8 }}
      affinity:
        {{- .affinity | default $.Values.defaultAffinity | toYaml | nindent 8 }}
      tolerations:
        {{- .tolerations | default $.Values.defaultTolerations | toYaml | nindent 8 }}
      volumes:
        - name: tmp
          emptyDir: {}
        - name: kafka-certs
          projected:
            sources:
            - secret:
                name: {{ $.Values.strimziClusterName }}-cluster-ca-cert
                items:
                  - key: ca.crt
                    path: ca.crt
                  - key: ca.p12
                    path: ca.p12
            - secret:
                name: {{ include "stream-processors.fullname" $ }}-{{ $name }}-user
                items:
                  - key: user.crt
                    path: user.crt
                  - key: user.p12
                    path: user.p12
                  - key: user.key
                    path: user.key
      {{- if .extraVolumes }}
        {{- toYaml .extraVolumes | nindent 8 }}
      {{- end }}
{{- if .persistence.enabled }}
  {{- if .persistence.existingClaim -}}
        - name: {{ .persistence.volumeName }}
          persistentVolumeClaim:
            claimName: {{ tpl .persistence.existingClaim $ }}
  {{- else }}
  {{- if .persistence.persistentVolumeClaimRetentionPolicy.enabled }}
  persistentVolumeClaimRetentionPolicy:
    whenDeleted: {{ .persistence.persistentVolumeClaimRetentionPolicy.whenDeleted }}
    whenScaled: {{ .persistence.persistentVolumeClaimRetentionPolicy.whenScaled }}
  {{- end }}
  volumeClaimTemplates:
    - apiVersion: v1
      kind: PersistentVolumeClaim
      metadata:
        name: {{ .persistence.volumeName }}
        {{- if .persistence.annotations }}
        annotations: {{- include "common.tplvalues.render" (dict "value" .persistence.annotations "context" $) | nindent 10 }}
        {{- end }}
        {{- if .persistence.labels }}
        labels: {{- include "common.tplvalues.render" (dict "value" .persistence.labels "context" $) | nindent 10 }}
        {{- end }}
      spec:
        accessModes:
        {{- range .persistence.accessModes }}
          - {{ . | quote }}
        {{- end }}
        {{- if .persistence.dataSource }}
        dataSource: {{- include "common.tplvalues.render" (dict "value" .persistence.dataSource "context" $) | nindent 10 }}
        {{- end }}
        resources:
          requests:
            storage: {{ .persistence.size | quote }}
        {{- if .persistence.selector }}
        selector: {{- include "common.tplvalues.render" (dict "value" .persistence.selector "context" $) | nindent 10 }}
        {{- end }}
        {{- include "common.storage.class" (dict "persistence" .persistence) | nindent 8 }}
  {{- end }}
{{- end }}
{{- end }}
{{- end }}
