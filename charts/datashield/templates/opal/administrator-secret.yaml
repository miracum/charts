{{- if empty .Values.opal.auth.administrator.existingSecret.name }}
{{- $secretName := printf "%s-opal-administrator" (include "datashield.fullname" .) -}}
apiVersion: v1
kind: Secret
metadata:
  name: {{ $secretName }}
  labels:
    {{- include "datashield.labels" . | nindent 4 }}
    app.kubernetes.io/component: opal
type: Opaque
data:
{{- if (empty .Values.opal.auth.administrator.password) }}
  {{/*
    via <https://itnext.io/manage-auto-generated-secrets-in-your-helm-charts-5aee48ba6918>
    retrieve the secret data using lookup function and when not exists, return an empty dictionary / map as result
  */}}
  {{- $secretObj := (lookup "v1" "Secret" .Release.Namespace $secretName) | default dict -}}
  {{- $secretData := (get $secretObj "data") | default dict -}}
  {{/*
    set $jwtSecret to existing secret data or generate a random one when not exists
  */}}
  {{- $password := (get $secretData "administrator-password") | default (randAlphaNum 32 | b64enc) -}}
  administrator-password: {{ $password | quote }}
{{- else }}
  administrator-password: {{ .Values.opal.auth.administrator.password | b64enc }}
{{- end }}
{{- end }}
