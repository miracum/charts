apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "fhir-pseudonymizer.fullname" . }}
  labels:
    {{- include "fhir-pseudonymizer.labels" . | nindent 4 }}
  {{- with .Values.deploymentAnnotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "fhir-pseudonymizer.matchLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/anonymization-cm.yaml") . | sha256sum | quote }}
        {{- with .Values.podAnnotations }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        {{- include "fhir-pseudonymizer.matchLabels" . | nindent 8 }}
    spec:
      serviceAccountName: {{ include "fhir-pseudonymizer.serviceAccountName" . }}
      automountServiceAccountToken: {{ .Values.serviceAccount.automountServiceAccountToken }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: fhir-pseudonymizer
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.registry }}/{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: DOTNET_EnableDiagnostics
              value: "0"
            - name: PseudonymizationService
              value: {{ .Values.pseudonymizationService }}
            {{- if eq .Values.pseudonymizationService "Vfps" }}
            - name: Vfps__Address
              value: {{ include "fhir-pseudonymizer.vfpsAddress" . }}
            {{- end }}
            {{- if eq .Values.pseudonymizationService "gPAS" }}
            - name: GPAS__VERSION
              value: {{ .Values.gpas.version | quote }}
            {{- if .Values.gpas.fhirUrl }}
            - name: GPAS__URL
              value: {{ .Values.gpas.fhirUrl | quote }}
            {{- end }}
            {{- if .Values.gpas.auth.basic.enabled }}
            - name: GPAS__AUTH__BASIC__USERNAME
              value: {{ .Values.gpas.auth.basic.username | quote }}
            - name: GPAS__AUTH__BASIC__PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "fhir-pseudonymizer.gpasBasicAuthSecretName" . }}
                  key: GPAS__AUTH__BASIC__PASSWORD
            {{- end }}
            {{- end }}
            {{- if or (.Files.Glob "files/anonymization.yaml") .Values.anonymizationConfig }}
            - name: ANONYMIZATIONENGINECONFIGPATH
              value: /etc/fhir-pseudonymizer/anonymization.yaml
            {{- end }}
            {{- if .Values.auth.apiKey.enabled }}
            - name: ApiKey
              valueFrom:
                secretKeyRef:
                  name: {{ include "fhir-pseudonymizer.fhirPseudonymizerApiKeySecretName" . }}
                  key: APIKEY
            {{- end }}
            {{- if .Values.extraEnv }}
            {{- toYaml .Values.extraEnv | nindent 12 }}
            {{- end }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
            - name: http-metrics
              containerPort: 8081
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /ready
              port: http
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.readinessProbe.successThreshold }}
            failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
          livenessProbe:
            httpGet:
              path: /live
              port: http
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.livenessProbe.successThreshold }}
            failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            {{- if or (.Files.Glob "files/anonymization.yaml") .Values.anonymizationConfig }}
            - name: anonymization-config
              mountPath: /etc/fhir-pseudonymizer
            {{- end }}
            {{- if .Values.extraVolumeMounts }}
            {{- toYaml .Values.extraVolumeMounts | nindent 12 }}
            {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.topologySpreadConstraints }}
      topologySpreadConstraints:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        {{- if or (.Files.Glob "files/anonymization.yaml") .Values.anonymizationConfig }}
        - name: anonymization-config
          configMap:
            name: {{ include "fhir-pseudonymizer.fullname" . }}-anonymization
        {{- end }}
        {{- if .Values.extraVolumes }}
        {{- toYaml .Values.extraVolumes | nindent 8 }}
        {{- end }}
